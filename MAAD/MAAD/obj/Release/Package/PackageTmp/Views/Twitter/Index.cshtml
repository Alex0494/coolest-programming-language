@{
    ViewBag.Title = "Team MAAD - Twitter";
}
<script src="~/Scripts/Chart.js"></script>
<script src="~/Scripts/jquery-1.9.1.js"></script>

<section id="main-content">
    <section class="wrapper site-min-height">        
        <div class="row mt">
            <div class="col-lg-12">
                <h3><i class="fa fa-twitter"></i> Twitter Analysis</h3>
            </div>
            <div class="col-lg-8 col-lg-offset-2 col-md-6">            
                <!-- DONUT CHART -->
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">10 linguaggi più twittati di @DateTime.Now.ToString("MMMM", System.Globalization.CultureInfo.CurrentCulture)</h3>
                    </div>
                    <div class="box-body">
                        <canvas id="pieChart" height="250"></canvas>
                    </div><!-- /.box-body -->
                </div><!-- /.box -->
            </div><!-- /.col  -->
            <div class="col-lg-8 col-lg-offset-2 col-md-6">
                <!-- LINE CHART -->
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Variazione di popolarità rispetto al mese precedente</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="lineChart" height="250"></canvas>
                        </div>
                    </div><!-- /.box-body -->
                </div><!-- /.box -->
            </div><!-- /.col  -->
            <div class="col-lg-8 col-lg-offset-2 col-md-6">
                <!-- AREA CHART -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Area Chart</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="areaChart" height="250"></canvas>
                        </div>
                    </div><!-- /.box-body -->
                </div><!-- /.box -->
            </div><!-- /.col  -->
            <!-- BAR CHART -->
            <div class="col-lg-8 col-lg-offset-2 col-md-6">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h3 class="box-title">Bar Chart</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="barChart" height="230"></canvas>
                        </div>
                    </div><!-- /.box-body -->
                </div><!-- /.box -->
            </div><!-- /.col  -->
        </div><!-- row mt -->
    </section><!-- /.content -->
</section> <!-- /main content -->


<script>
   
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas);

        var areaChartData = {
            labels: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
            datasets: [
              {
                  label: "Python",
                  fillColor: "#0496FF",
                  strokeColor: "#0496FF",
                  pointColor: "#0496FF",
                  data: [65, 59, 80, 81, 56, 55, 40, 20, 65, 12, 78, 110]
              },
              {
                  label: "Java",
                  fillColor: "#70E4EF",
                  strokeColor: "#70E4EF",
                  pointColor: "#70E4EF",
                  data: [28, 48, 40, 19, 86, 27, 90, 75, 100, 120, 80, 65]
              },
              {
                  label: "C#",
                  fillColor: "rgba(247, 162, 120, 0.9)",
                  strokeColor: "rgba(247, 162, 120, 0.9)",
                  pointColor: "#F7A278",
                  data: [15, 85, 20, 57, 84, 94, 14, 60, 50, 12, 110, 98]
              },
              {
                  label: "Go",
                  fillColor: "rgba(110,235,131,0.9)",
                  strokeColor: "rgba(110,235,131,0.8)",
                  pointColor: "#6EEB83",
                  data: [78, 60, 50, 14, 86, 100, 120, 90, 87, 56, 70, 30]
              },// {
              //    label: "Pearl",
              //    fillColor: "rgba(353,87,91,0.9)",
              //    strokeColor: "rgba(353,87,91,0.8)",
              //    pointColor: "#E71D36",
              //    data: [22, 25, 78, 85, 65, 14, 2, 85, 45, 100, 80, 65]
              //},
              //{
              //    label: "Scala",
              //    fillColor: "#E2EF70",
              //    strokeColor: "#E2EF70",
              //    pointColor: "#E2EF70",
              //    data: [85, 98, 78, 62, 12, 26, 30, 60, 48, 36, 84, 100]
              //},
              //{
              //    label: "PHP",
              //    fillColor: "#4C230A",
              //    strokeColor: "#4C230A",
              //    pointColor: "#4C230A",
              //    data: [45, 86, 98, 76, 65, 23, 65, 73, 38, 58, 96, 23]
              //},
              //{
              //    label: "C++",
              //    fillColor: "#CCC9A1",
              //    strokeColor: "#CCC9A1",
              //    pointColor: "#CCC9A1",
              //    data: [14, 19, 42, 47, 56, 23, 100, 54, 35, 85, 120, 45]
              //},
              //{
              //    label: "Javascript",
              //    fillColor: "#FF8552",
              //    strokeColor: "#FF8552",
              //    pointColor: "#FF8552",
              //    data: [15, 25, 35, 55, 12, 86, 78, 13, 100, 123, 45, 50]
              //}, 
              {
                  label: "Lua",
                  fillColor: "#CD9FCC",
                  strokeColor: "#CD9FCC",
                  pointColor: "#CD9FCC",
                  data: [57, 32, 79, 32, 100, 68, 35, 15, 150, 128, 90, 50]
              }

            ]
        };

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"

        };

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions);

        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
        lineChart.Line(areaChartData, lineChartOptions);
        
     
        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [
          {
              value: 1500,
              color: "#f56954",
              highlight: "#f56954",
              label: "Python"
          },
          {
              value: 500,
              color: "#00a65a",
              highlight: "#00a65a",
              label: "Java"
          },
          {
              value: 400,
              color: "#f39c12",
              highlight: "#f39c12",
              label: "C#"
          },
          {
              value: 600,
              color: "#00c0ef",
              highlight: "#00c0ef",
              label: "C++"
          },
          {
              value: 300,
              color: "#3c8dbc",
              highlight: "#3c8dbc",
              label: "Go"
          },
          {
              value: 8000,
              color: "#404479",
              highlight: "#404479",
              label: "Pearl"
          },
          {
                value: 1500,
                color: "#8bb417",
                highlight: "#8bb417",
                label: "Lua"
          },
          {
            value: 300,
            color: "#ff9292",
            highlight: "#ff9292",
            label: "Scala"
          },
          {
            value: 200,
            color: "#e61f44",
            highlight: "#e61f44",
            label: "PHP"
          },
          {
            value: 100,
            color: "#51a3a3",
            highlight: "#51a3a3",
            label: "JavaScript"
          }
            ];
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: "#fff",
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: "easeOutBounce",
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: false,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);

        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $("#barChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartData = areaChartData;
        barChartData.datasets[1].fillColor = "#00a65a";
        barChartData.datasets[1].strokeColor = "#00a65a";
        barChartData.datasets[1].pointColor = "#00a65a";
                
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 2,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 3,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 2,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: false,
            multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
        };

        barChartOptions.datasetFill = false;
        barChart.Bar(barChartData, barChartOptions);
    });
</script>
